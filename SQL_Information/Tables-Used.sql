--  DH_UserAccount
-- Handle different types of users (clients, owners, staff, admin) and login/authentication

CREATE TABLE DH_UserAccount (
    userID VARCHAR2(50) PRIMARY KEY,
    username VARCHAR2(50) UNIQUE NOT NULL,
    password VARCHAR2(100) NOT NULL, -- hashed password
    role VARCHAR2(20) NOT NULL CHECK (role IN ('client', 'staff', 'owner', 'admin')),
    status VARCHAR2(20) DEFAULT 'active' CHECK (status IN ('active', 'inactive', 'suspended')),
    staffNo VARCHAR2(50),
    photo CLOB,
    CONSTRAINT fk_user_staff FOREIGN KEY (staffNo) REFERENCES DH_Staff(staffNo)
);
COMMIT;

-- DH_LoginHistory
-- Login events for security/audit
CREATE TABLE DH_LoginHistory (
    loginID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    userID VARCHAR2(50) NOT NULL,
    loginTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ipAddress VARCHAR2(50),
    CONSTRAINT fk_login_user FOREIGN KEY (userID) REFERENCES DH_UserAccount(userID)
);

CREATE INDEX idx_login_user ON DH_LoginHistory(userID);
COMMIT;


CREATE TABLE DH_Branch (
    branchNo VARCHAR2(10) PRIMARY KEY,
    street VARCHAR2(50) NOT NULL,
    cityID NUMBER NOT NULL,
    postcode VARCHAR2(10) NOT NULL,
    CONSTRAINT fk_branch_city FOREIGN KEY (cityID) REFERENCES DH_City(cityID)
);

CREATE INDEX idx_branch_city ON DH_Branch(cityID);
COMMIT;


CREATE TABLE DH_Staff (
    staffNo VARCHAR2(10) PRIMARY KEY,
    fname VARCHAR2(50) NOT NULL,
    lname VARCHAR2(50) NOT NULL,
    position VARCHAR2(50) NOT NULL,
    sex CHAR(1) NOT NULL CHECK (sex IN ('M', 'F', 'O')),
    dob DATE NOT NULL CHECK (dob <= SYSDATE),
    salary NUMBER(9,2) DEFAULT 0 CHECK (salary >= 0),
    branchNo VARCHAR2(10) NOT NULL,
    telephone VARCHAR2(20),
    mobile VARCHAR2(20),
    email VARCHAR2(100) UNIQUE NOT NULL,
    CONSTRAINT fk_staff_branch FOREIGN KEY (branchNo) REFERENCES DH_Branch(branchNo)
);

CREATE INDEX idx_staff_branch ON DH_Staff(branchNo);
COMMIT;


CREATE TABLE DH_Client (
    clientNo VARCHAR2(10) PRIMARY KEY,
    fname VARCHAR2(50) NOT NULL,
    lname VARCHAR2(50) NOT NULL,
    telNo VARCHAR2(20),
    street VARCHAR2(100),
    cityID NUMBER,
    postcode VARCHAR2(10),
    email VARCHAR2(100) UNIQUE NOT NULL,
    prefTypeID NUMBER, -- FK to DH_PropertyType
    maxRent NUMBER(9,2) DEFAULT 0 CHECK (maxRent >= 0),
    CONSTRAINT fk_client_city FOREIGN KEY (cityID) REFERENCES DH_City(cityID),
    CONSTRAINT fk_client_prefType FOREIGN KEY (prefTypeID) REFERENCES DH_PropertyType(typeID),
    CONSTRAINT chk_client_email_format CHECK (email LIKE '%_@__%.__%')
);

CREATE INDEX idx_client_city ON DH_Client(cityID);
CREATE INDEX idx_client_prefType ON DH_Client(prefTypeID);